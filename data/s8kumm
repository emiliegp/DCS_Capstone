0
What would it take to build a trading algorithm from scratch?
2022-01-21 01:58:46
""
"['Alpaca might be able to help you with this. They have a lot of GitHub uploads with this kind of stuff', 'Depends how good you want it to be', 'Just think about all the things you need to make a trading decision.  You need market data for the prices of whatever you are willing to trade in, possibly additional data to determine market conditions like market averages, interest rates, or vol indices.  You also need the data about your current holdings, purchase limits, risk tolerances. \n\nOnce you have all the data plumbing necessary to make all this available to your algorithm, you have to make some actual trading decisions. Likely you will need two levels of decision making:  one is identifying various trading opportunities and calculating metrics to represent the quality and risks of the trade. Second is looking at multiple trading opportunities and deciding which ones to execute. It’s not simply a matter of best grade wins in most cases, you may have portfolio optimization goals that seek to reduce portfolio covariance, or optimize purchases based on minimizing specific risk metrics. \n\nYou need to decide when to sell too. Some assets you may have specific trigger events where you want to force a sale, other times you may sell because another asset looks more attractive to replace it. \n\nAnd we haven’t even discussed how to give the user a way to define and customize what they want to achieve. Trying to create an understandable user experience to enable complex decision making is no small task. You can try a “trust my robot to make all the right decisions for you” approach, but most people want to feel in control, or at least aware of how it will work. \n\nThen you need to either display recommended trades, or actually execute them electronically. Any automated trading needs failsafes to avoid a bug bankrupting the user.  Note that at any time the markets may shift, so your decisions could become invalid before you act on them. It’s also a good idea to verify that trades actually happen and you don’t mistakenly think you have assets that were actually failed trades.  \n\nHow hard does all that sound to you?', ""u/milkmanbran's advice is what I would recommend as well. Review the samples from Alpaca. They show a a fair bit of simple strategies.\n\nI've written trading algos interfacing with several different trading API's and consider the data pipeline and trade API separate from the algo. If your already comfy programming it might as little as a few hours to get up to speed with a sample Alpaca algo, but might take months to setup a  trading and supervising system. \n\nHere an estimate of the time I spent getting up to speed with Alpaca:\n\n* Review Samples/Test samples in paper trade account - 5 hours\n* Write/Test/Schedule process to ingest trade data to local database - 8 hours\n* Write/Test/Schedule Alpaca Account Monitoring Report/Alerts - 6 hours\n* Verify local data, review gaps in data. Alpaca issues  or ingesting issue? - 16 hours\n* Write/Test Algo virtual account management to limit purchase authority per algo - 8 hours\n\nAt this point I think you have all the building blocks ready to start thinking, building and refining an algo in your paper trading account. I then spent \\~2 weeks building/testing ML strategies that mostly for me break the market into trading cohorts filtering out small cap stocks which are then processed to look for relative underperformers and outperformers which are then analyzed to disqualify them for trading based on unusual activity(trading vol more than x% above average, x% above average new articles, negative news sentiment, etc.).\n\nI'd say I had three weeks in writing the initial three algos. The logic of executing a algos respective strategy and the logic of opening and closing positions. Avoiding wash sales. \n\nThen I spent two weeks writing supervisor process to do tasks like disable an algo due to loosing money; close positions due to loosing money; reduce/increase purchase power of an algo based on performance. \n\nFor me I think this was maybe two months to get where it ran pretty autonomous and I ran algo's full time for maybe 10 months. I found it sucked up too much of my time/focus versus the alpha that was being generated and distracting from my day job. \n\nThe [ml.net](https://ml.net) library is under-rated for getting started in ML; you can start out in CPU based execution and then move to GPU if needed.\n\nGood Luck"", ""Hello there! I am a bot raising awareness of Alpacas\n \n Here is an Alpaca Fact:\n \n Alpacas do not have teeth in their upper palette.\n\n \n ______ \n \n| [Info](https://github.com/soham96/AlpacaBot/blob/master/README.md)| [Code](https://github.com/soham96/AlpacaBot)| [Feedback](http://np.reddit.com/message/compose/?to=JustAnAlpacaBot&subject=Feedback)| [Contribute Fact](http://np.reddit.com/message/compose/?to=JustAnAlpacaBot&subject=Fact)\n \n ###### You don't get a fact, you earn it. If you got this fact then AlpacaBot thinks you deserved it!"", ""I'd want it to be good enough that I can trust my money with it just like any other trading algorithm. I'm probably in over my head right this minute, but after a few years programming and coding I think I'll be able to see the light at the end of the tunnel."", ""It sounds like a lot of work and it is a lot of work. That's why I was looking at this as a 10+ year project as I want to learn how to program along the way.\n\nWhat would you recommend I start with?"", ""Thanks for laying out the steps for me. As someone still starting out in programming, what would be your recommendation for the first language to learn? I want to pick up programming along the way too and that's why I'm seeing this as a decade long project.\n\nThanks for the help. Means a lot!"", 'No problem. My personal preference is c# for general software development.  See [https://dotnet.microsoft.com/en-us/learn/csharp](https://dotnet.microsoft.com/en-us/learn/csharp) for lots of resources, there are lots of learning options for c#. Perhaps try a highly rated course on udemy, a Pluralsight subscription or try a free youtube series.']"
